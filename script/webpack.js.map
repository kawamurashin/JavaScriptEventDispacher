{"version":3,"sources":["webpack://ws_webpack_test/./src/Common/Events/CommonEvent.js","webpack://ws_webpack_test/./src/Common/Events/EventDispatcher.js","webpack://ws_webpack_test/./src/Controller/ControllerManager.js","webpack://ws_webpack_test/./src/Main.js","webpack://ws_webpack_test/./src/Model/ModelManager.js","webpack://ws_webpack_test/webpack/bootstrap","webpack://ws_webpack_test/webpack/runtime/define property getters","webpack://ws_webpack_test/webpack/runtime/hasOwnProperty shorthand","webpack://ws_webpack_test/webpack/runtime/make namespace object","webpack://ws_webpack_test/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAwC;AACjC,0BAA0B,mDAAK;AACtC;AACA;AACA;AACA;AACA;AACA,0D;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA,wBAAwB,iCAAiC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,oBAAoB,iCAAiC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACvImD;AACM;AAClD;AACP;AACA;AACA;AACA;AACA,4BAA4B,yEAAwB;AACpD,2CAA2C,wFAAgC;AAC3E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;;;;ACrBiE;AACjE;AACA;AACA;AACA;AACA,oCAAoC,4EAAiB;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;ACbgE;AACR;AAClD,2BAA2B,2EAAe;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,mEAAW,CAAC,wFAAgC;AAC1E;AACA;AACA;AACA;;AAEA,sB;;;;;;UClCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"webpack.js","sourcesContent":["import {Event} from \"./EventDispatcher\";\r\nexport class CommonEvent extends Event{\r\n    constructor(type = null, value = null) {\r\n        super(type, value);\r\n    }\r\n}\r\n//Constant\r\nCommonEvent.MODEL_COMPLETE_EVENT = \"model_complete_event\";","/**\r\n * @author kawamura shin\r\n * EventDispatcher クラスのインスタンスを集約します。\r\n * tsEventDispacherの移植\r\n * https://github.com/ts020/tsEventDispacher\r\n */\r\nexport class EventDispatcher {\r\n    constructor() {\r\n        this.listeners = {};\r\n    }\r\n    /**\r\n     * イベントをイベントフローに送出します。\r\n     * @param {Event}event ベントフローに送出されるイベントオブジェクトです。\r\n     */\r\n    dispatchEvent(event) {\r\n        let e;\r\n        let type;\r\n        if (event instanceof Event) {\r\n            type = event.type;\r\n            e = event;\r\n        } else {\r\n            type = event;\r\n            e = new Event(type);\r\n        }\r\n\r\n        if(this.listeners[type] != null){\r\n            e.currentTarget = this;\r\n            for (let i = 0; i < this.listeners[type].length; i++){\r\n                let listener = this.listeners[type][i];\r\n                try {\r\n                    listener.handler(e);\r\n                } catch (error) {\r\n                    if (window.console) {\r\n                        console.error(error.stack);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * イベントリスナーオブジェクトを EventDispatcher オブジェクトに登録し、リスナーがイベントの通知を受け取るようにします。\r\n     * @param {string}type イベントのタイプです。\r\n     * @param {function}callback イベントを処理するリスナー関数です。この関数は、次の例のように、Event オブジェクトを唯一のパラメーターとして受け取り、何も返さないものである必要があります。\r\n     * @param {number}priority 優先度\r\n     */\r\n    addEventListener(type, callback, priority = 0) {\r\n        if(this.listeners[type] == null){\r\n            this.listeners[type] = [];\r\n        }\r\n        this.listeners[type].push(new EventListener(type, callback, priority));\r\n        this.listeners[type].sort(function (listener1, listener2) {\r\n            return listener2.priority - listener1.priority;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * オブジェクトからリスナーを削除します。\r\n     * @param {string}type イベントのタイプです。\r\n     * @param {function}callback 削除するリスナーオブジェクトです。\r\n     */\r\n    removeEventListener(type, callback) {\r\n        if(this.hasEventListener(type, callback)) {\r\n            for(let i=0; i < this.listeners[type].length; i++){\r\n                let listener = this.listeners[type][i];\r\n                if(listener.equalCurrentListener(type, callback)) {\r\n                    listener.handler = null;\r\n                    this.listeners[type].splice(i,1);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * リスナーの初期化\r\n     */\r\n    clearEventListener() {\r\n        this.listeners = {};\r\n    }\r\n\r\n    /**\r\n     * EventDispatcher オブジェクトに、特定のイベントタイプに対して登録されたリスナーがあるかどうかを確認します。\r\n     * @param {string}type イベントのタイプです。\r\n     * @returns {boolean} 指定したタイプのリスナーが登録されている場合は true、それ以外の場合は false です。\r\n     */\r\n    containEventListener(type) {\r\n        if (this.listeners[type] == null) return false;\r\n        return this.listeners[type].length > 0;\r\n    }\r\n\r\n    /**\r\n     * EventDispatcher オブジェクトに、特定のイベントタイプとリスナー関数が登録されたリスナーがあるかどうかを確認します。\r\n     * @param {string}type イベントのタイプです。\r\n     * @param {function}callback\r\n     * @returns {boolean} 指定したタイプとリスナー関数をもつリスナーオブジェクトが登録されている場合は true、それ以外の場合は false です。\r\n     */\r\n    hasEventListener(type, callback) {\r\n        if(this.listeners[type] == null) return false;\r\n        for(let i=0; i < this.listeners[type].length; i++){\r\n            let listener = this.listeners[type][i];\r\n            if(listener.equalCurrentListener(type, callback)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * リスナーの登録オブジェクト\r\n */\r\nexport class EventListener {\r\n    constructor( type = null,  handler = null,  priority = 0) {\r\n        this.type = type;\r\n        this.handler = handler;\r\n    }\r\n    equalCurrentListener(type, handler) {\r\n        if (this.type == type && this.handler == handler) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * イベントリスナーにパラメーターとして渡す Event オブジェクトを作成します。\r\n */\r\nexport class Event {\r\n    constructor( type = null,  value = null) {\r\n        this.type = type;\r\n        this.value = value;\r\n        Event.COMPLETE = \"complete\";\r\n        Event.CHANGE_PROPERTY =\"changeProperty\";\r\n    }\r\n}\r\n\r\n\r\n","import {ModelManager} from \"../Model/ModelManager\";\r\nimport {CommonEvent} from \"../Common/Events/CommonEvent\";\r\nexport class ControllerManager {\r\n    constructor() {\r\n        const handler = (e) => {\r\n            this.eventHandler(e);\r\n        }\r\n        this._modelManger = ModelManager.getInstance();\r\n        this._modelManger.addEventListener(CommonEvent.MODEL_COMPLETE_EVENT, handler);\r\n    }\r\n\r\n    start() {\r\n        this._modelManger.start();\r\n    }\r\n\r\n    eventHandler(e) {\r\n        console.log(\"handler\");\r\n        console.log(e.currentTarget);\r\n        console.log(e.value);\r\n\r\n    }\r\n}","import {ControllerManager} from \"./Controller/ControllerManager\";\r\nclass Main\r\n{\r\n    constructor() {\r\n        console.log(\"main start\")\r\n        let controllerManager = new ControllerManager();\r\n        controllerManager.start();\r\n    }\r\n}\r\n\r\nwindow.addEventListener(\"load\" , () =>\r\n{\r\n    new Main();\r\n})\r\n\r\n","import {EventDispatcher} from \"../Common/Events/EventDispatcher\";\r\nimport {CommonEvent} from \"../Common/Events/CommonEvent\";\r\nexport class ModelManager extends EventDispatcher\r\n{\r\n\r\n    static getInstance()\r\n    {\r\n        if(this._instance == null)\r\n        {\r\n            this._instance = new ModelManager(new SingletonBlock());\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    constructor(block) {\r\n        super();\r\n    }\r\n    start()\r\n    {\r\n        let handler = () =>\r\n        {\r\n            this.setTimeoutHandler();\r\n        }\r\n        setTimeout(handler , 1000);\r\n    }\r\n\r\n    setTimeoutHandler()\r\n    {\r\n        let commonEvent = new CommonEvent(CommonEvent.MODEL_COMPLETE_EVENT);\r\n        commonEvent.value = \"modelManager value\";\r\n        this.dispatchEvent(commonEvent);\r\n    }\r\n}\r\n\r\nclass SingletonBlock{}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/Main.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}